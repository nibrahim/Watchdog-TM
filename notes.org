* [2009-08-23 Sun] 
  :CLOCK:
  CLOCK: [2009-08-24 Mon 23:37]--[2009-08-25 Tue 00:13] =>  0:36
  CLOCK: [2009-08-23 Sun 22:00]--[2009-08-23 Sun 22:36] =>  0:30
  :END:
  - Analysed 24Hour dumps and daily dumps. 
  - The daily dumps are just single zipped XML files. Multiple entries
    (primary key appears to serial_number). Each zipfile decompresses
    into a single XML file
  - The 24 hour dumps are more complicated and contain images as well
    as metadata as an XML document in directories named after the
    serial numbers. 
  - *The numbers are mutually exclusive.* What is there in the daily
    dumps is not there in 24 hour dumps. I think one of them is an
    application in pending (probably the 24 hour dump since it saysp
    'application-form' and what not) and the other is a granted
    application (although it seems to contain an event log where other
    things are said).
     - A few queries on the web using these numbers should sort out this
       confusion.
  - If so, I think the right way to go is to parse and upload the
    granted applications (ie. daily dump) rather than the 24 hour
    ones.
* [2009-08-25 Tue]
  CLOCK: [2009-08-25 Tue 22:47]--[2009-08-25 Tue 23:44] =>  0:57
  - We will first parse the =daily= directories and worry about the
    rest later.

* [2009-09-07 Mon]
  CLOCK: [2009-09-07 Mon 01:02]--[2009-09-07 Mon 01:33] =>  0:31
  Using file:///home/noufal/projects/python/watchdog/2/docs/Trademark-Applications-Documentation-v2.0-07152005.pdf
  - Inside =application-information=
  - Check if =data-available-code=. If it's there, there is no data
    and we don't need to parse this file.
  - Inside =file-segments=, we will have multiple =file-segment= and
    =action-keys=.
  - =file-segment= will always contain TMRK
  - =action-keys= will contain the event that this is coming here for
    and will bunch a group of cases together.
  - This will be followed by multiple =case-file= s. For each one, 
      * =serial-number= is an 8 digit code *M*
      * =registration-number= 7 digit number *O*
      * =Transaction-date= Date of the processing (might be useful to check later).
      * The =case-file-header= which will contain
	- =filing-date= Containing the date of filing at the USPTO
	- =registration-date= Containing the date on which the TM was registered
	- =status-code= 3 position code containing status of the TM.
	- =status-date= Date on which status was changed to the current one.
	- =mark-identification= Variable length field containing the
          acual TM characters.
	- =mark-drawing-code= Contains a 4 position code mentioning
          the physical characteristics of the mark.
	- =published-for-opposition= The date on which the TM was
          published for opposition in the official gazette.
	- =ammend-to-register-date= is the date on which the TM was
          entered as an ammendment to a register.
	- =abandonment-date= is the date on which the TM will be abandoned.
	- =cancellation-code= A one character code indicating that the
          reg is being cancelled or that it parts be cancelled. 
	- =cancellation-date= The date on which the TM is being
          cancelled. 

* [2009-10-05 Mon]
  :CLOCK:
  CLOCK: [2009-10-05 Mon 22:36]--[2009-10-05 Mon 23:14] =>  0:38
  CLOCK: [2009-10-05 Mon 22:31]--[2009-10-05 Mon 23:30] =>  0:59
  :END:
        - =republished-12-c-date= Optional node indicating
          republishing date under section 12c.
        - =domestic-representative-name= contains the "Domestic
          representative" for the TM.
        - =attorney-docket-number= 12 character wide field to identify
          attorney/case.
        - =attorney-name= Name of the attorney.
        - =principal-register-amended-in= Optional 1 character field
          indicating (T/F) whether register is ammended for
          application on principal registrar.
        - =trademark-in= One character field with 'T' indicating that
          the mark is used as a TradeMark.
        - =collective-trademark-in= Same as above with 'T' indicating
          that it's used as a collective trademark.
        - This enumeration is a fool's errand. Better make the sql
          file directly.
    - Continue from case file event statements section (Page 21).
* [2009-10-25 Sun]
  CLOCK: [2009-10-25 Sun 00:34]--[2009-10-25 Sun 01:04] =>  0:30
  - Our analysis was wrong. Need to revisit tables. 
  - Went through the DTD upto page 22. Trying to implement a crude
    parser. 
  
* [2009-10-25 Sun]
  :CLOCK:
  CLOCK: [2009-10-26 Mon 00:55]--[2009-10-26 Mon 01:26] =>  0:31
  CLOCK: [2009-10-25 Sun 22:31]--[2009-10-25 Sun 23:00] =>  0:29
  :END:
  - Might need to refactor after figuring out elementree properly.
  - Start parsing the rest of the body of the element and print it
    out.

* [2009-10-27 Tue]
  :CLOCK:
  CLOCK: [2009-10-28 Wed 01:10]--[2009-10-28 Wed 01:49] =>  0:39
  CLOCK: [2009-10-27 Tue 23:13]--[2009-10-27 Tue 23:45] =>  0:32
  CLOCK: [2009-10-27 Tue 21:52]--[2009-10-27 Tue 22:29] =>  0:37
  :END:
  
* [2009-10-28 Wed]
  :CLOCK:
  CLOCK: [2009-10-29 Thu 00:23]--[2009-10-29 Thu 01:36] =>  1:13
  CLOCK: [2009-10-28 Wed 23:53]--[2009-10-29 Thu 00:09] =>  0:16
  CLOCK: [2009-10-28 Wed 12:59]--[2009-10-28 Wed 13:37] =>  0:38
  :END:
  
  
